services:
    deployer:
        image: 'laravelsail/php84-composer:latest'
        volumes:
            - '.:/var/www/html'
        working_dir: /var/www/html
        networks:
            - sail
        depends_on:
            - mysql
        entrypoint: >
            sh -c "
                cp .env.example .env &&
                php artisan config:clear &&
                php artisan key:generate &&
                php artisan config:cache &&
                php artisan route:cache &&
                touch database/database.sqlite &&
                chmod -R 777 storage bootstrap/cache database/database.sqlite &&
                echo 'Deployment complete' > storage/deployer.ready &&
                exit 0       
            "
        healthcheck:
            test: ["CMD", "test", "-f", "/var/www/html/storage/deployer.ready"]
            interval: 10s
            timeout: 5s
            retries: 5
    laravel.test:
        build:
            context: './vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            deployer:
                condition: service_completed_successfully
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    queue-worker:
        image: sail-8.4/app
        volumes:
            - '.:/var/www/html'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        working_dir: /var/www/html
        restart: unless-stopped
        command: sh -c 'php artisan queue:work'
        networks:
            - sail
        depends_on:
            - laravel.test
            - mysql
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local